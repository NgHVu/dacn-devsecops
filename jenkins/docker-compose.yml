version: "3.9"

name: dacn-ci

networks:
  ci:
    driver: bridge

volumes:
  jenkins_data:
  sonarqube_data:
  sonarqube_extensions:
  sonarqube_logs:
  postgres_data:

services:
  jenkins:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jenkins
    restart: unless-stopped
    user: "0:0"                        # chạy root để dùng docker.sock (local dev)
    networks: [ci]
    ports:
      - "8080:8080"
      - "50000:50000"
    environment:
      TZ: "Asia/Ho_Chi_Minh"
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false -Dorg.jenkinsci.plugins.durabletask.BourneShellScript.HEARTBEAT_CHECK_INTERVAL=1200"
    volumes:
      - jenkins_data:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:8080/login > /dev/null || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 10
      start_period: 40s

  postgres:
    image: postgres:13
    container_name: postgres
    restart: unless-stopped
    networks: [ci]
    environment:
      TZ: "Asia/Ho_Chi_Minh"
      POSTGRES_USER: "sonarqube"
      POSTGRES_PASSWORD: "sonarqube"
      POSTGRES_DB: "sonarqube"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U sonarqube -d sonarqube || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 10
      start_period: 20s

  sonarqube:
    image: sonarqube:lts-community
    container_name: sonarqube
    restart: unless-stopped
    networks: [ci]
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "9000:9000"
# PHIÊN BẢN MỚI - ĐÃ SỬA
    environment:
      TZ: "Asia/Ho_Chi_Minh"
      SONAR_JDBC_URL: "jdbc:postgresql://postgres:5432/sonarqube"
      SONAR_JDBC_USERNAME: "sonarqube"
      SONAR_JDBC_PASSWORD: "sonarqube"
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions
      - sonarqube_logs:/opt/sonarqube/logs
    ulimits:
      nofile:
        soft: 65536
        hard: 65536
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:9000/api/system/health | grep -q 'GREEN' || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 20
      start_period: 60s
